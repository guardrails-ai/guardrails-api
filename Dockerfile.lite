FROM public.ecr.aws/docker/library/python:3.11.6-slim

ARG GITHUB_TOKEN
ARG HF_TOKEN

# COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.7.1 /lambda-adapter /opt/extensions/lambda-adapter
# COPY ./opentelemetry-lambda-layer /opt

# Create app directory
WORKDIR /app

# check the version
RUN python3 --version
# start the virtual environment
RUN python3 -m venv /opt/venv

# Enable venv
ENV PATH="/opt/venv/bin:$PATH"

# Install git and curl
RUN apt-get update
RUN apt-get install -y git curl gcc jq

# Copy the requirements file
COPY requirements*.txt .

RUN curl https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem -o ./global-bundle.pem

# Install app dependencies
RUN pip install -r requirements-lock.txt

# Download punkt data
RUN python -m nltk.downloader -d /opt/nltk_data punkt

RUN guardrails hub install hub://guardrails/profanity_free
RUN guardrails hub install hub://guardrails/valid_length
RUN guardrails hub install hub://guardrails/lowercase
RUN guardrails hub install hub://guardrails/regex_match

COPY ./custom-install ./custom-install

RUN python ./custom-install/install.py

# Freeze dependencies
RUN pip freeze > requirements-lock.txt

# Copy the whole folder inside the Image filesystem
COPY . .

EXPOSE 8000

CMD opentelemetry-instrument gunicorn --bind 0.0.0.0:8000 --timeout=90 --threads=10 "app:create_app()"
# CMD gunicorn --forwarded-allow-ips="*" --bind 0.0.0.0:8000 --timeout=60 --threads=10 "app:create_app()"
